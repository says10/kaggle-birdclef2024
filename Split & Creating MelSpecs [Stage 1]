{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e424b8cf",
   "metadata": {
    "papermill": {
     "duration": 0.00817,
     "end_time": "2024-06-02T07:44:11.371675",
     "exception": false,
     "start_time": "2024-06-02T07:44:11.363505",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Let's Think of a Better Split Method"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "abd8c2fa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:11.388147Z",
     "iopub.status.busy": "2024-06-02T07:44:11.387370Z",
     "iopub.status.idle": "2024-06-02T07:44:12.397323Z",
     "shell.execute_reply": "2024-06-02T07:44:12.396149Z"
    },
    "id": "2dt7oG43VAqc",
    "papermill": {
     "duration": 1.021615,
     "end_time": "2024-06-02T07:44:12.400394",
     "exception": false,
     "start_time": "2024-06-02T07:44:11.378779",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import librosa as lb\n",
    "import librosa.display as lbd\n",
    "import soundfile as sf\n",
    "from  soundfile import SoundFile\n",
    "import pandas as pd\n",
    "from  IPython.display import Audio\n",
    "from pathlib import Path\n",
    "\n",
    "from matplotlib import pyplot as plt\n",
    "\n",
    "from tqdm.notebook import tqdm\n",
    "import joblib, json, re\n",
    "\n",
    "from  sklearn.model_selection  import StratifiedKFold\n",
    "tqdm.pandas()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e088ad91",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:12.418725Z",
     "iopub.status.busy": "2024-06-02T07:44:12.418096Z",
     "iopub.status.idle": "2024-06-02T07:44:12.621498Z",
     "shell.execute_reply": "2024-06-02T07:44:12.620404Z"
    },
    "papermill": {
     "duration": 0.21445,
     "end_time": "2024-06-02T07:44:12.624316",
     "exception": false,
     "start_time": "2024-06-02T07:44:12.409866",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('/kaggle/input/birdclef-2024/train_metadata.csv')\n",
    "df['secondary_labels'] = df['secondary_labels'].apply(lambda x: re.findall(r\"'(\\w+)'\", x))\n",
    "df['len_sec_labels'] = df['secondary_labels'].map(len)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a7b774b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:12.640677Z",
     "iopub.status.busy": "2024-06-02T07:44:12.639880Z",
     "iopub.status.idle": "2024-06-02T07:44:12.667839Z",
     "shell.execute_reply": "2024-06-02T07:44:12.666801Z"
    },
    "papermill": {
     "duration": 0.039501,
     "end_time": "2024-06-02T07:44:12.671003",
     "exception": false,
     "start_time": "2024-06-02T07:44:12.631502",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>primary_label</th>\n",
       "      <th>secondary_labels</th>\n",
       "      <th>type</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>scientific_name</th>\n",
       "      <th>common_name</th>\n",
       "      <th>author</th>\n",
       "      <th>license</th>\n",
       "      <th>rating</th>\n",
       "      <th>url</th>\n",
       "      <th>filename</th>\n",
       "      <th>len_sec_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3154</th>\n",
       "      <td>blnmon1</td>\n",
       "      <td>[copbar1, pursun4, pursun4]</td>\n",
       "      <td>['adult', 'sex uncertain', 'song']</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Hypothymis azurea</td>\n",
       "      <td>Black-naped Monarch</td>\n",
       "      <td>Aditya Soman</td>\n",
       "      <td>Creative Commons Attribution-NonCommercial-Sha...</td>\n",
       "      <td>2.5</td>\n",
       "      <td>https://www.xeno-canto.org/659841</td>\n",
       "      <td>blnmon1/XC659841.ogg</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13172</th>\n",
       "      <td>grywag</td>\n",
       "      <td>[grywag, houspa]</td>\n",
       "      <td>['male', 'song']</td>\n",
       "      <td>37.8392</td>\n",
       "      <td>-25.7944</td>\n",
       "      <td>Motacilla cinerea</td>\n",
       "      <td>Gray Wagtail</td>\n",
       "      <td>Cedric Mroczko</td>\n",
       "      <td>Creative Commons Attribution-NonCommercial-Sha...</td>\n",
       "      <td>3.5</td>\n",
       "      <td>https://www.xeno-canto.org/263232</td>\n",
       "      <td>grywag/XC263232.ogg</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20208</th>\n",
       "      <td>rewbul</td>\n",
       "      <td>[rewbul]</td>\n",
       "      <td>['call']</td>\n",
       "      <td>-20.4243</td>\n",
       "      <td>57.4296</td>\n",
       "      <td>Pycnonotus jocosus</td>\n",
       "      <td>Red-whiskered Bulbul</td>\n",
       "      <td>Cedric Mroczko</td>\n",
       "      <td>Creative Commons Attribution-NonCommercial-Sha...</td>\n",
       "      <td>3.5</td>\n",
       "      <td>https://www.xeno-canto.org/469086</td>\n",
       "      <td>rewbul/XC469086.ogg</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      primary_label             secondary_labels  \\\n",
       "3154        blnmon1  [copbar1, pursun4, pursun4]   \n",
       "13172        grywag             [grywag, houspa]   \n",
       "20208        rewbul                     [rewbul]   \n",
       "\n",
       "                                     type  latitude  longitude  \\\n",
       "3154   ['adult', 'sex uncertain', 'song']       NaN        NaN   \n",
       "13172                    ['male', 'song']   37.8392   -25.7944   \n",
       "20208                            ['call']  -20.4243    57.4296   \n",
       "\n",
       "          scientific_name           common_name          author  \\\n",
       "3154    Hypothymis azurea   Black-naped Monarch   Aditya Soman    \n",
       "13172   Motacilla cinerea          Gray Wagtail  Cedric Mroczko   \n",
       "20208  Pycnonotus jocosus  Red-whiskered Bulbul  Cedric Mroczko   \n",
       "\n",
       "                                                 license  rating  \\\n",
       "3154   Creative Commons Attribution-NonCommercial-Sha...     2.5   \n",
       "13172  Creative Commons Attribution-NonCommercial-Sha...     3.5   \n",
       "20208  Creative Commons Attribution-NonCommercial-Sha...     3.5   \n",
       "\n",
       "                                     url              filename  len_sec_labels  \n",
       "3154   https://www.xeno-canto.org/659841  blnmon1/XC659841.ogg               3  \n",
       "13172  https://www.xeno-canto.org/263232   grywag/XC263232.ogg               2  \n",
       "20208  https://www.xeno-canto.org/469086   rewbul/XC469086.ogg               1  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df.len_sec_labels>0].sample(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c1496e06",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:12.688752Z",
     "iopub.status.busy": "2024-06-02T07:44:12.688005Z",
     "iopub.status.idle": "2024-06-02T07:44:12.700900Z",
     "shell.execute_reply": "2024-06-02T07:44:12.699979Z"
    },
    "papermill": {
     "duration": 0.023859,
     "end_time": "2024-06-02T07:44:12.703165",
     "exception": false,
     "start_time": "2024-06-02T07:44:12.679306",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "zitcis1    500\n",
       "lirplo     500\n",
       "litgre1    500\n",
       "comgre     500\n",
       "comkin1    500\n",
       "          ... \n",
       "blaeag1      6\n",
       "wynlau1      6\n",
       "niwpig1      5\n",
       "asiope1      5\n",
       "integr       5\n",
       "Name: primary_label, Length: 182, dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.primary_label.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b2cb5adb",
   "metadata": {
    "papermill": {
     "duration": 0.007802,
     "end_time": "2024-06-02T07:44:12.719130",
     "exception": false,
     "start_time": "2024-06-02T07:44:12.711328",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Something has to be done for Birds with <= 1 samples."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e54f493",
   "metadata": {
    "papermill": {
     "duration": 0.007767,
     "end_time": "2024-06-02T07:44:12.734781",
     "exception": false,
     "start_time": "2024-06-02T07:44:12.727014",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Also the fact that we have to perform inference in 2 hours w/ CPU, I think best solution is just to have single split rather than using multiple folds."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a0eef124",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:12.751997Z",
     "iopub.status.busy": "2024-06-02T07:44:12.751660Z",
     "iopub.status.idle": "2024-06-02T07:44:12.760564Z",
     "shell.execute_reply": "2024-06-02T07:44:12.759709Z"
    },
    "papermill": {
     "duration": 0.020142,
     "end_time": "2024-06-02T07:44:12.762821",
     "exception": false,
     "start_time": "2024-06-02T07:44:12.742679",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "import pandas as pd\n",
    "\n",
    "def birds_stratified_split(df, target_col, test_size=0.2):\n",
    "    class_counts = df[target_col].value_counts()\n",
    "    low_count_classes = class_counts[class_counts < 2].index.tolist() ### Birds with single counts\n",
    "\n",
    "    df['train'] = df[target_col].isin(low_count_classes)\n",
    "\n",
    "    train_df, val_df = train_test_split(df[~df['train']], test_size=test_size, stratify=df[~df['train']][target_col], random_state=42)\n",
    "\n",
    "    train_df = pd.concat([train_df, df[df['train']]], axis=0).reset_index(drop=True)\n",
    "\n",
    "    # Remove the 'valid' column\n",
    "    train_df.drop('train', axis=1, inplace=True)\n",
    "    val_df.drop('train', axis=1, inplace=True)\n",
    "\n",
    "    return train_df, val_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1f8fae80",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:12.779958Z",
     "iopub.status.busy": "2024-06-02T07:44:12.779661Z",
     "iopub.status.idle": "2024-06-02T07:44:12.859365Z",
     "shell.execute_reply": "2024-06-02T07:44:12.858488Z"
    },
    "papermill": {
     "duration": 0.091496,
     "end_time": "2024-06-02T07:44:12.862119",
     "exception": false,
     "start_time": "2024-06-02T07:44:12.770623",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_df, valid_df = birds_stratified_split(df, 'primary_label', 0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "55ad576c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:12.880579Z",
     "iopub.status.busy": "2024-06-02T07:44:12.880266Z",
     "iopub.status.idle": "2024-06-02T07:44:12.891691Z",
     "shell.execute_reply": "2024-06-02T07:44:12.890797Z"
    },
    "papermill": {
     "duration": 0.023096,
     "end_time": "2024-06-02T07:44:12.893990",
     "exception": false,
     "start_time": "2024-06-02T07:44:12.870894",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "zitcis1    500\n",
       "lirplo     500\n",
       "litgre1    500\n",
       "comgre     500\n",
       "comkin1    500\n",
       "          ... \n",
       "blaeag1      6\n",
       "wynlau1      6\n",
       "niwpig1      5\n",
       "asiope1      5\n",
       "integr       5\n",
       "Name: primary_label, Length: 182, dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.primary_label.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1fd9896d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:12.911410Z",
     "iopub.status.busy": "2024-06-02T07:44:12.911122Z",
     "iopub.status.idle": "2024-06-02T07:44:12.921511Z",
     "shell.execute_reply": "2024-06-02T07:44:12.920610Z"
    },
    "papermill": {
     "duration": 0.021575,
     "end_time": "2024-06-02T07:44:12.923709",
     "exception": false,
     "start_time": "2024-06-02T07:44:12.902134",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "graher1    400\n",
       "litgre1    400\n",
       "woosan     400\n",
       "eurcoo     400\n",
       "grnsan     400\n",
       "          ... \n",
       "wynlau1      5\n",
       "blaeag1      5\n",
       "asiope1      4\n",
       "niwpig1      4\n",
       "integr       4\n",
       "Name: primary_label, Length: 182, dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.primary_label.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "50639ace",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:12.941382Z",
     "iopub.status.busy": "2024-06-02T07:44:12.941087Z",
     "iopub.status.idle": "2024-06-02T07:44:12.949578Z",
     "shell.execute_reply": "2024-06-02T07:44:12.948799Z"
    },
    "papermill": {
     "duration": 0.019685,
     "end_time": "2024-06-02T07:44:12.951762",
     "exception": false,
     "start_time": "2024-06-02T07:44:12.932077",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "houspa     100\n",
       "barswa     100\n",
       "blrwar1    100\n",
       "comros     100\n",
       "graher1    100\n",
       "          ... \n",
       "darter2      1\n",
       "niwpig1      1\n",
       "bncwoo3      1\n",
       "blaeag1      1\n",
       "paisto1      1\n",
       "Name: primary_label, Length: 182, dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "valid_df.primary_label.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "b0755a42",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:12.970175Z",
     "iopub.status.busy": "2024-06-02T07:44:12.969469Z",
     "iopub.status.idle": "2024-06-02T07:44:12.974945Z",
     "shell.execute_reply": "2024-06-02T07:44:12.974021Z"
    },
    "papermill": {
     "duration": 0.016875,
     "end_time": "2024-06-02T07:44:12.977062",
     "exception": false,
     "start_time": "2024-06-02T07:44:12.960187",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class Config:\n",
    "    sampling_rate = 32000\n",
    "    duration = 5 \n",
    "    fmin = 0\n",
    "    fmax = None\n",
    "    audios_path = Path(\"/kaggle/input/birdclef-2024/train_audio\")\n",
    "    out_dir_train = Path(\"specs/train\") \n",
    "    \n",
    "    out_dir_valid = Path(\"specs/valid\") \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "2990fbfb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:12.995322Z",
     "iopub.status.busy": "2024-06-02T07:44:12.995034Z",
     "iopub.status.idle": "2024-06-02T07:44:13.000098Z",
     "shell.execute_reply": "2024-06-02T07:44:12.999284Z"
    },
    "papermill": {
     "duration": 0.016617,
     "end_time": "2024-06-02T07:44:13.002349",
     "exception": false,
     "start_time": "2024-06-02T07:44:12.985732",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "Config.out_dir_train.mkdir(exist_ok=True, parents=True)\n",
    "Config.out_dir_valid.mkdir(exist_ok=True, parents=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7421dc46",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:13.021612Z",
     "iopub.status.busy": "2024-06-02T07:44:13.021047Z",
     "iopub.status.idle": "2024-06-02T07:44:13.026671Z",
     "shell.execute_reply": "2024-06-02T07:44:13.025785Z"
    },
    "papermill": {
     "duration": 0.017158,
     "end_time": "2024-06-02T07:44:13.028856",
     "exception": false,
     "start_time": "2024-06-02T07:44:13.011698",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def get_audio_info(filepath):\n",
    "    \"\"\"Get some properties from  an audio file\"\"\"\n",
    "    with SoundFile(filepath) as f:\n",
    "        sr = f.samplerate\n",
    "        frames = f.frames\n",
    "        duration = float(frames)/sr\n",
    "    return {\"frames\": frames, \"sr\": sr, \"duration\": duration}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "adc22af7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:13.047221Z",
     "iopub.status.busy": "2024-06-02T07:44:13.046658Z",
     "iopub.status.idle": "2024-06-02T07:44:13.053627Z",
     "shell.execute_reply": "2024-06-02T07:44:13.052631Z"
    },
    "id": "Kmh6xx5_NCjJ",
    "outputId": "ad61f09f-6f0e-4204-c658-21112e051785",
    "papermill": {
     "duration": 0.018503,
     "end_time": "2024-06-02T07:44:13.055807",
     "exception": false,
     "start_time": "2024-06-02T07:44:13.037304",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def add_path_df(df):\n",
    "    \n",
    "    df[\"path\"] = [str(Config.audios_path/filename) for filename in df.filename]\n",
    "    df = df.reset_index(drop=True)\n",
    "    pool = joblib.Parallel(2)\n",
    "    mapper = joblib.delayed(get_audio_info)\n",
    "    tasks = [mapper(filepath) for filepath in df.path]\n",
    "    df2 =  pd.DataFrame(pool(tqdm(tasks))).reset_index(drop=True)\n",
    "    df = pd.concat([df,df2], axis=1).reset_index(drop=True)\n",
    "\n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "9affb5f8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:13.074488Z",
     "iopub.status.busy": "2024-06-02T07:44:13.073789Z",
     "iopub.status.idle": "2024-06-02T07:44:13.078361Z",
     "shell.execute_reply": "2024-06-02T07:44:13.077442Z"
    },
    "papermill": {
     "duration": 0.015988,
     "end_time": "2024-06-02T07:44:13.080401",
     "exception": false,
     "start_time": "2024-06-02T07:44:13.064413",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tqdm.pandas()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2987f8d8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:44:13.098966Z",
     "iopub.status.busy": "2024-06-02T07:44:13.098408Z",
     "iopub.status.idle": "2024-06-02T07:46:05.428331Z",
     "shell.execute_reply": "2024-06-02T07:46:05.426986Z"
    },
    "papermill": {
     "duration": 112.342045,
     "end_time": "2024-06-02T07:46:05.431094",
     "exception": false,
     "start_time": "2024-06-02T07:44:13.089049",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "699eadca259a4230be6d730cc826cbdc",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/19567 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "train_df = add_path_df(train_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "5d6f5d4a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:46:05.451548Z",
     "iopub.status.busy": "2024-06-02T07:46:05.450654Z",
     "iopub.status.idle": "2024-06-02T07:46:33.139528Z",
     "shell.execute_reply": "2024-06-02T07:46:33.138484Z"
    },
    "papermill": {
     "duration": 27.702433,
     "end_time": "2024-06-02T07:46:33.142721",
     "exception": false,
     "start_time": "2024-06-02T07:46:05.440288",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5f8a5a85278c4af69c404b105339ac61",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/4892 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "valid_df = add_path_df(valid_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6fd059ef",
   "metadata": {
    "papermill": {
     "duration": 0.009733,
     "end_time": "2024-06-02T07:46:33.163856",
     "exception": false,
     "start_time": "2024-06-02T07:46:33.154123",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "fe241c95",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:46:33.185118Z",
     "iopub.status.busy": "2024-06-02T07:46:33.184249Z",
     "iopub.status.idle": "2024-06-02T07:46:33.196789Z",
     "shell.execute_reply": "2024-06-02T07:46:33.195815Z"
    },
    "papermill": {
     "duration": 0.025544,
     "end_time": "2024-06-02T07:46:33.199117",
     "exception": false,
     "start_time": "2024-06-02T07:46:33.173573",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    19567.000000\n",
       "mean        41.858233\n",
       "std         98.451733\n",
       "min          0.470000\n",
       "25%         11.180406\n",
       "50%         22.230219\n",
       "75%         44.564906\n",
       "max       4670.641625\n",
       "Name: duration, dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df[\"duration\"].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "0ff807e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:46:33.219370Z",
     "iopub.status.busy": "2024-06-02T07:46:33.219064Z",
     "iopub.status.idle": "2024-06-02T07:46:33.225036Z",
     "shell.execute_reply": "2024-06-02T07:46:33.224207Z"
    },
    "papermill": {
     "duration": 0.018337,
     "end_time": "2024-06-02T07:46:33.227025",
     "exception": false,
     "start_time": "2024-06-02T07:46:33.208688",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def compute_melspec(y, sr, n_mels, fmin, fmax):\n",
    "    \"\"\"\n",
    "    Computes a mel-spectrogram and puts it at decibel scale\n",
    "    Arguments:\n",
    "        y {np array} -- signal\n",
    "        params {AudioParams} -- Parameters to use for the spectrogram. Expected to have the attributes sr, n_mels, f_min, f_max\n",
    "    Returns:\n",
    "        np array -- Mel-spectrogram\n",
    "    \"\"\"\n",
    "    melspec = lb.feature.melspectrogram(\n",
    "        y=y, sr=sr, n_mels=n_mels, fmin=fmin, fmax=fmax,\n",
    "    )\n",
    "\n",
    "    melspec = lb.power_to_db(melspec).astype(np.float32)\n",
    "    return melspec"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "e46b962e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:46:33.246766Z",
     "iopub.status.busy": "2024-06-02T07:46:33.246488Z",
     "iopub.status.idle": "2024-06-02T07:46:33.257732Z",
     "shell.execute_reply": "2024-06-02T07:46:33.256979Z"
    },
    "id": "-Nlw4E5UVAqi",
    "papermill": {
     "duration": 0.023434,
     "end_time": "2024-06-02T07:46:33.259787",
     "exception": false,
     "start_time": "2024-06-02T07:46:33.236353",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def mono_to_color(X, eps=1e-6, mean=None, std=None):\n",
    "    mean = mean or X.mean()\n",
    "    std = std or X.std()\n",
    "    X = (X - mean) / (std + eps)\n",
    "    \n",
    "    _min, _max = X.min(), X.max()\n",
    "\n",
    "    if (_max - _min) > eps:\n",
    "        V = np.clip(X, _min, _max)\n",
    "        V = 255 * (V - _min) / (_max - _min)\n",
    "        V = V.astype(np.uint8)\n",
    "    else:\n",
    "        V = np.zeros_like(X, dtype=np.uint8)\n",
    "\n",
    "    return V\n",
    "\n",
    "def crop_or_pad(y, length, is_train=True, start=None):\n",
    "    if len(y) < length:\n",
    "        y = np.concatenate([y, np.zeros(length - len(y))])\n",
    "        \n",
    "        n_repeats = length // len(y)\n",
    "        epsilon = length % len(y)\n",
    "        \n",
    "        y = np.concatenate([y]*n_repeats + [y[:epsilon]])\n",
    "        \n",
    "    elif len(y) > length:\n",
    "        if not is_train:\n",
    "            start = start or 0\n",
    "        else:\n",
    "            start = start or np.random.randint(len(y) - length)\n",
    "\n",
    "        y = y[start:start + length]\n",
    "\n",
    "    return y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5beeade8",
   "metadata": {
    "papermill": {
     "duration": 0.009488,
     "end_time": "2024-06-02T07:46:33.278699",
     "exception": false,
     "start_time": "2024-06-02T07:46:33.269211",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "90a40075",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:46:33.300350Z",
     "iopub.status.busy": "2024-06-02T07:46:33.300040Z",
     "iopub.status.idle": "2024-06-02T07:46:33.314546Z",
     "shell.execute_reply": "2024-06-02T07:46:33.313713Z"
    },
    "papermill": {
     "duration": 0.027927,
     "end_time": "2024-06-02T07:46:33.316788",
     "exception": false,
     "start_time": "2024-06-02T07:46:33.288861",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class AudioToImage:\n",
    "    def __init__(self, sr=Config.sampling_rate, n_mels=128, fmin=Config.fmin, fmax=Config.fmax, duration=Config.duration, step=None, res_type=\"kaiser_fast\", resample=True, train = True):\n",
    "\n",
    "        self.sr = sr\n",
    "        self.n_mels = n_mels\n",
    "        self.fmin = fmin\n",
    "        self.fmax = fmax or self.sr//2\n",
    "\n",
    "        self.duration = duration\n",
    "        self.audio_length = self.duration*self.sr\n",
    "        self.step = step or self.audio_length\n",
    "        \n",
    "        self.res_type = res_type\n",
    "        self.resample = resample\n",
    "\n",
    "        self.train = train\n",
    "    def audio_to_image(self, audio):\n",
    "        melspec = compute_melspec(audio, self.sr, self.n_mels, self.fmin, self.fmax ) \n",
    "        image = mono_to_color(melspec)\n",
    "#         compute_melspec(y, sr, n_mels, fmin, fmax)\n",
    "        return image\n",
    "\n",
    "    def __call__(self, row, save=True):\n",
    "\n",
    "      audio, orig_sr = sf.read(row.path, dtype=\"float32\")\n",
    "\n",
    "      if self.resample and orig_sr != self.sr:\n",
    "        audio = lb.resample(audio, orig_sr, self.sr, res_type=self.res_type)\n",
    "        \n",
    "      audios = [audio[i:i+self.audio_length] for i in range(0, max(1, len(audio) - self.audio_length + 1), self.step)]\n",
    "      audios[-1] = crop_or_pad(audios[-1] , length=self.audio_length)\n",
    "      images = [self.audio_to_image(audio) for audio in audios]\n",
    "      images = np.stack(images)\n",
    "        \n",
    "      if save:\n",
    "        if self.train:\n",
    "            path = Config.out_dir_train/f\"{row.filename}.npy\"\n",
    "        else:\n",
    "            path = Config.out_dir_valid/f\"{row.filename}.npy\"\n",
    "            \n",
    "        path.parent.mkdir(exist_ok=True, parents=True)\n",
    "        np.save(str(path), images)\n",
    "      else:\n",
    "        return  row.filename, images"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "326bc4d1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:46:33.337490Z",
     "iopub.status.busy": "2024-06-02T07:46:33.337201Z",
     "iopub.status.idle": "2024-06-02T07:46:33.341950Z",
     "shell.execute_reply": "2024-06-02T07:46:33.340993Z"
    },
    "papermill": {
     "duration": 0.017482,
     "end_time": "2024-06-02T07:46:33.344287",
     "exception": false,
     "start_time": "2024-06-02T07:46:33.326805",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tqdm.pandas()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "77c74e43",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:46:33.365221Z",
     "iopub.status.busy": "2024-06-02T07:46:33.364514Z",
     "iopub.status.idle": "2024-06-02T07:46:33.370551Z",
     "shell.execute_reply": "2024-06-02T07:46:33.369635Z"
    },
    "papermill": {
     "duration": 0.0187,
     "end_time": "2024-06-02T07:46:33.372589",
     "exception": false,
     "start_time": "2024-06-02T07:46:33.353889",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def get_audios_as_images(df, train = True):\n",
    "    pool = joblib.Parallel(2)\n",
    "    \n",
    "    converter = AudioToImage(step=int(Config.duration*0.666*Config.sampling_rate),train=train)\n",
    "    mapper = joblib.delayed(converter)\n",
    "    tasks = [mapper(row) for row in df.itertuples(False)]\n",
    "    pool(tqdm(tasks))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "3fb74f27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T07:46:33.393312Z",
     "iopub.status.busy": "2024-06-02T07:46:33.392998Z",
     "iopub.status.idle": "2024-06-02T08:43:59.222415Z",
     "shell.execute_reply": "2024-06-02T08:43:59.221180Z"
    },
    "papermill": {
     "duration": 3445.844759,
     "end_time": "2024-06-02T08:43:59.226814",
     "exception": false,
     "start_time": "2024-06-02T07:46:33.382055",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "29b9e46c3b104ef3b4edb2fa08ec72f0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/19567 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "get_audios_as_images(train_df, train = True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "9d23f790",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-02T08:43:59.258200Z",
     "iopub.status.busy": "2024-06-02T08:43:59.257184Z",
     "iopub.status.idle": "2024-06-02T08:58:33.061260Z",
     "shell.execute_reply": "2024-06-02T08:58:33.060084Z"
    },
    "papermill": {
     "duration": 873.819447,
     "end_time": "2024-06-02T08:58:33.064225",
     "exception": false,
     "start_time": "2024-06-02T08:43:59.244778",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b55fbbda2f12462fb4aa7ec292e60a14",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/4892 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "get_audios_as_images(valid_df, train = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "37cc2894",
   "metadata": {
    "execution": {
     "iopub.status.idle": "2024-06-02T07:32:01.969650Z",
     "shell.execute_reply": "2024-06-02T07:32:01.968474Z",
     "shell.execute_reply.started": "2024-06-02T07:23:32.558295Z"
    },
    "papermill": {
     "duration": 0.010071,
     "end_time": "2024-06-02T08:58:33.084927",
     "exception": false,
     "start_time": "2024-06-02T08:58:33.074856",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f1d16b19",
   "metadata": {
    "papermill": {
     "duration": 0.010198,
     "end_time": "2024-06-02T08:58:33.105133",
     "exception": false,
     "start_time": "2024-06-02T08:58:33.094935",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "databundleVersionId": 8068726,
     "sourceId": 70203,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30407,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 4474.811003,
   "end_time": "2024-06-02T08:58:35.752042",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-02T07:44:00.941039",
   "version": "2.4.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "02c8fb9b54384d7e8aa89db0b655c45f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_723bf539d1d24e10b37d7d0e411ea4a4",
       "max": 19567.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_73f56cb9e8d14b5aa46deddaf0f276d9",
       "value": 19567.0
      }
     },
     "0a6013618a744eb2b3ef021b0da85131": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "18fbf56861454320ad24aedc74ff5287": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_f0c5f2960b03446687270155c89937ef",
       "placeholder": "​",
       "style": "IPY_MODEL_53ceacafceef448a9f96b14d622e568c",
       "value": " 4892/4892 [00:27&lt;00:00, 147.20it/s]"
      }
     },
     "21b8c8447bad48cbbfd3c3aab25a4b7e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_beb54a905386406eadb57c0dfd007e25",
       "max": 4892.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_0a6013618a744eb2b3ef021b0da85131",
       "value": 4892.0
      }
     },
     "22197d153ae54e759f72fdb34d9b6689": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_6247ef07917d453f8712127969ec1e73",
       "placeholder": "​",
       "style": "IPY_MODEL_2df7d6a01a17414c9931d3fba5d4f3f3",
       "value": "100%"
      }
     },
     "293736ca409840c1a449e7250f13d283": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_69aec123dab146e9a9dfa0a17eccce34",
       "placeholder": "​",
       "style": "IPY_MODEL_a328176e32754fd488b774984c5e0ae6",
       "value": " 19567/19567 [57:25&lt;00:00,  6.89it/s]"
      }
     },
     "29b9e46c3b104ef3b4edb2fa08ec72f0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_ab22f89b9262418eaf8e3fc191c09a96",
        "IPY_MODEL_9bbcfb16960d44f68666e78ce56583de",
        "IPY_MODEL_293736ca409840c1a449e7250f13d283"
       ],
       "layout": "IPY_MODEL_f10eb88ab0e142bda4123ec8624d9103"
      }
     },
     "2df7d6a01a17414c9931d3fba5d4f3f3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "34407faed8e7462dae60efdeb88395b6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "438ece95de70458ca0da43ab41dbca44": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "473fcf181c6d4285af60c2699934f12c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "48cced1d202f4b068be928780fb04cf5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4bc96023e0614718b5ddf5bff00f6c26": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "5256896c377249729aa601505ab435f7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "53ceacafceef448a9f96b14d622e568c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "57b5523c7d0a4072a98f7d351a289aca": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5f8a5a85278c4af69c404b105339ac61": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_22197d153ae54e759f72fdb34d9b6689",
        "IPY_MODEL_21b8c8447bad48cbbfd3c3aab25a4b7e",
        "IPY_MODEL_18fbf56861454320ad24aedc74ff5287"
       ],
       "layout": "IPY_MODEL_48cced1d202f4b068be928780fb04cf5"
      }
     },
     "618b1007751043608d3a46b6489d33e0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "6247ef07917d453f8712127969ec1e73": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "62b890a35e7a42d3a5d988d89067fa76": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_73e939cefde74cd0b2e245ddcba2269f",
       "placeholder": "​",
       "style": "IPY_MODEL_4bc96023e0614718b5ddf5bff00f6c26",
       "value": "100%"
      }
     },
     "642d1f5a17fc464e81bbe7148857544b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "699eadca259a4230be6d730cc826cbdc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e4800108677b4b75ad247e9e8993c914",
        "IPY_MODEL_02c8fb9b54384d7e8aa89db0b655c45f",
        "IPY_MODEL_9d32d04e6d1f4d9d9a30128ee5d75d01"
       ],
       "layout": "IPY_MODEL_642d1f5a17fc464e81bbe7148857544b"
      }
     },
     "69aec123dab146e9a9dfa0a17eccce34": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "723bf539d1d24e10b37d7d0e411ea4a4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "73e939cefde74cd0b2e245ddcba2269f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "73f56cb9e8d14b5aa46deddaf0f276d9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "791cc07d994d42888f7df0eec82c56c5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_438ece95de70458ca0da43ab41dbca44",
       "placeholder": "​",
       "style": "IPY_MODEL_8f354f0128274f6aa40d00da7f059d9b",
       "value": " 4892/4892 [14:32&lt;00:00,  3.31it/s]"
      }
     },
     "8c69a96b142a41b8b3be5dbf4ad41c55": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8f354f0128274f6aa40d00da7f059d9b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "99528ae65f8943e8b4c4e486df2b4a5f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9bbcfb16960d44f68666e78ce56583de": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_e5b4cebb39a940c1a0bac295177bb09e",
       "max": 19567.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_618b1007751043608d3a46b6489d33e0",
       "value": 19567.0
      }
     },
     "9c4ba0b117c946f18a38c543ace7478a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9d32d04e6d1f4d9d9a30128ee5d75d01": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_8c69a96b142a41b8b3be5dbf4ad41c55",
       "placeholder": "​",
       "style": "IPY_MODEL_34407faed8e7462dae60efdeb88395b6",
       "value": " 19567/19567 [01:51&lt;00:00, 186.80it/s]"
      }
     },
     "a328176e32754fd488b774984c5e0ae6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "a661bbbe22ea4a5da6f3396cb6845645": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "ab22f89b9262418eaf8e3fc191c09a96": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_9c4ba0b117c946f18a38c543ace7478a",
       "placeholder": "​",
       "style": "IPY_MODEL_da2de6662caa4ed394194e2e5a5e6811",
       "value": "100%"
      }
     },
     "b55fbbda2f12462fb4aa7ec292e60a14": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_62b890a35e7a42d3a5d988d89067fa76",
        "IPY_MODEL_c3bd8b58204a4f3585eb2ca1d91a0288",
        "IPY_MODEL_791cc07d994d42888f7df0eec82c56c5"
       ],
       "layout": "IPY_MODEL_57b5523c7d0a4072a98f7d351a289aca"
      }
     },
     "beb54a905386406eadb57c0dfd007e25": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c3bd8b58204a4f3585eb2ca1d91a0288": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_99528ae65f8943e8b4c4e486df2b4a5f",
       "max": 4892.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_a661bbbe22ea4a5da6f3396cb6845645",
       "value": 4892.0
      }
     },
     "da2de6662caa4ed394194e2e5a5e6811": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "e4800108677b4b75ad247e9e8993c914": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_473fcf181c6d4285af60c2699934f12c",
       "placeholder": "​",
       "style": "IPY_MODEL_5256896c377249729aa601505ab435f7",
       "value": "100%"
      }
     },
     "e5b4cebb39a940c1a0bac295177bb09e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f0c5f2960b03446687270155c89937ef": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f10eb88ab0e142bda4123ec8624d9103": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
